#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nCode
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ncode_dk")]
	public partial class SystemModel : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMetadataDescriptorEntity(MetadataDescriptorEntity instance);
    partial void UpdateMetadataDescriptorEntity(MetadataDescriptorEntity instance);
    partial void DeleteMetadataDescriptorEntity(MetadataDescriptorEntity instance);
    partial void InsertGenericMetadataProperty(GenericMetadataProperty instance);
    partial void UpdateGenericMetadataProperty(GenericMetadataProperty instance);
    partial void DeleteGenericMetadataProperty(GenericMetadataProperty instance);
    #endregion
		
		public SystemModel(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SystemModel(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SystemModel(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SystemModel(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MetadataDescriptorEntity> MetadataDescriptorEntities
		{
			get
			{
				return this.GetTable<MetadataDescriptorEntity>();
			}
		}
		
		public System.Data.Linq.Table<GenericMetadataProperty> GenericMetadataProperties
		{
			get
			{
				return this.GetTable<GenericMetadataProperty>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_MetadataDescriptors")]
	public partial class MetadataDescriptorEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ObjectTypeID;
		
		private int _DisplayIndex;
		
		private string _Name;
		
		private string _DisplayText;
		
		private global::nCode.Metadata.MetadataEditControlViewMode _DisplayMode;
		
		private string _EditControlPath;
		
		private string _EditControlArguments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnObjectTypeIDChanging(System.Guid value);
    partial void OnObjectTypeIDChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayTextChanging(string value);
    partial void OnDisplayTextChanged();
    partial void OnDisplayModeChanging(global::nCode.Metadata.MetadataEditControlViewMode value);
    partial void OnDisplayModeChanged();
    partial void OnEditControlPathChanging(string value);
    partial void OnEditControlPathChanged();
    partial void OnEditControlArgumentsChanging(string value);
    partial void OnEditControlArgumentsChanged();
    #endregion
		
		public MetadataDescriptorEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this.OnDisplayTextChanging(value);
					this.SendPropertyChanging();
					this._DisplayText = value;
					this.SendPropertyChanged("DisplayText");
					this.OnDisplayTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayMode", DbType="Int NOT NULL", CanBeNull=false)]
		public global::nCode.Metadata.MetadataEditControlViewMode DisplayMode
		{
			get
			{
				return this._DisplayMode;
			}
			set
			{
				if ((this._DisplayMode != value))
				{
					this.OnDisplayModeChanging(value);
					this.SendPropertyChanging();
					this._DisplayMode = value;
					this.SendPropertyChanged("DisplayMode");
					this.OnDisplayModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditControlPath", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditControlPath
		{
			get
			{
				return this._EditControlPath;
			}
			set
			{
				if ((this._EditControlPath != value))
				{
					this.OnEditControlPathChanging(value);
					this.SendPropertyChanging();
					this._EditControlPath = value;
					this.SendPropertyChanged("EditControlPath");
					this.OnEditControlPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditControlArguments", DbType="NVarChar(255) NULL")]
		public string EditControlArguments
		{
			get
			{
				return this._EditControlArguments;
			}
			set
			{
				if ((this._EditControlArguments != value))
				{
					this.OnEditControlArgumentsChanging(value);
					this.SendPropertyChanging();
					this._EditControlArguments = value;
					this.SendPropertyChanged("EditControlArguments");
					this.OnEditControlArgumentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_MetadataProperties")]
	public partial class GenericMetadataProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ObjectTypeID;
		
		private System.Guid _ObjectID;
		
		private string _Key;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnObjectTypeIDChanging(System.Guid value);
    partial void OnObjectTypeIDChanged();
    partial void OnObjectIDChanging(System.Guid value);
    partial void OnObjectIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public GenericMetadataProperty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
