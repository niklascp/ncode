#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nCode.Catalog
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="news_cmspartner_dk")]
	public partial class CatalogModel : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCategoryLocalization(CategoryLocalization instance);
    partial void UpdateCategoryLocalization(CategoryLocalization instance);
    partial void DeleteCategoryLocalization(CategoryLocalization instance);
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertBrandLocalization(BrandLocalization instance);
    partial void UpdateBrandLocalization(BrandLocalization instance);
    partial void DeleteBrandLocalization(BrandLocalization instance);
    partial void InsertCampaign(Campaign instance);
    partial void UpdateCampaign(Campaign instance);
    partial void DeleteCampaign(Campaign instance);
    partial void InsertCampaignLocalization(CampaignLocalization instance);
    partial void UpdateCampaignLocalization(CampaignLocalization instance);
    partial void DeleteCampaignLocalization(CampaignLocalization instance);
    partial void InsertCampaignItem(CampaignItem instance);
    partial void UpdateCampaignItem(CampaignItem instance);
    partial void DeleteCampaignItem(CampaignItem instance);
    partial void InsertSegment(Segment instance);
    partial void UpdateSegment(Segment instance);
    partial void DeleteSegment(Segment instance);
    partial void InsertSegmentLocalization(SegmentLocalization instance);
    partial void UpdateSegmentLocalization(SegmentLocalization instance);
    partial void DeleteSegmentLocalization(SegmentLocalization instance);
    partial void InsertSegmentItem(SegmentItem instance);
    partial void UpdateSegmentItem(SegmentItem instance);
    partial void DeleteSegmentItem(SegmentItem instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertItemLocalization(ItemLocalization instance);
    partial void UpdateItemLocalization(ItemLocalization instance);
    partial void DeleteItemLocalization(ItemLocalization instance);
    partial void InsertItemPrice(ItemPrice instance);
    partial void UpdateItemPrice(ItemPrice instance);
    partial void DeleteItemPrice(ItemPrice instance);
    partial void InsertStockTransaction(StockTransaction instance);
    partial void UpdateStockTransaction(StockTransaction instance);
    partial void DeleteStockTransaction(StockTransaction instance);
    partial void InsertItemImage(ItemImage instance);
    partial void UpdateItemImage(ItemImage instance);
    partial void DeleteItemImage(ItemImage instance);
    partial void InsertItemRelation(ItemRelation instance);
    partial void UpdateItemRelation(ItemRelation instance);
    partial void DeleteItemRelation(ItemRelation instance);
    partial void InsertItemProperty(ItemProperty instance);
    partial void UpdateItemProperty(ItemProperty instance);
    partial void DeleteItemProperty(ItemProperty instance);
    partial void InsertVariant(Variant instance);
    partial void UpdateVariant(Variant instance);
    partial void DeleteVariant(Variant instance);
    partial void InsertVariantLocalization(VariantLocalization instance);
    partial void UpdateVariantLocalization(VariantLocalization instance);
    partial void DeleteVariantLocalization(VariantLocalization instance);
    partial void InsertVariantType(VariantType instance);
    partial void UpdateVariantType(VariantType instance);
    partial void DeleteVariantType(VariantType instance);
    partial void InsertVariantTypeLocalization(VariantTypeLocalization instance);
    partial void UpdateVariantTypeLocalization(VariantTypeLocalization instance);
    partial void DeleteVariantTypeLocalization(VariantTypeLocalization instance);
    partial void InsertItemVariantType(ItemVariantType instance);
    partial void UpdateItemVariantType(ItemVariantType instance);
    partial void DeleteItemVariantType(ItemVariantType instance);
    partial void InsertItemVariant(ItemVariant instance);
    partial void UpdateItemVariant(ItemVariant instance);
    partial void DeleteItemVariant(ItemVariant instance);
    partial void InsertItemVariantPrice(ItemVariantPrice instance);
    partial void UpdateItemVariantPrice(ItemVariantPrice instance);
    partial void DeleteItemVariantPrice(ItemVariantPrice instance);
    partial void InsertVatGroup(VatGroup instance);
    partial void UpdateVatGroup(VatGroup instance);
    partial void DeleteVatGroup(VatGroup instance);
    partial void InsertPriceGroup(PriceGroup instance);
    partial void UpdatePriceGroup(PriceGroup instance);
    partial void DeletePriceGroup(PriceGroup instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertNoSerie(NoSerie instance);
    partial void UpdateNoSerie(NoSerie instance);
    partial void DeleteNoSerie(NoSerie instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderItem(OrderItem instance);
    partial void UpdateOrderItem(OrderItem instance);
    partial void DeleteOrderItem(OrderItem instance);
    partial void InsertOrderPackage(OrderPackage instance);
    partial void UpdateOrderPackage(OrderPackage instance);
    partial void DeleteOrderPackage(OrderPackage instance);
    partial void InsertPaymentType(PaymentType instance);
    partial void UpdatePaymentType(PaymentType instance);
    partial void DeletePaymentType(PaymentType instance);
    partial void InsertPaymentTypeLocalization(PaymentTypeLocalization instance);
    partial void UpdatePaymentTypeLocalization(PaymentTypeLocalization instance);
    partial void DeletePaymentTypeLocalization(PaymentTypeLocalization instance);
    partial void InsertPaymentTypeProperty(PaymentTypeProperty instance);
    partial void UpdatePaymentTypeProperty(PaymentTypeProperty instance);
    partial void DeletePaymentTypeProperty(PaymentTypeProperty instance);
    partial void InsertDeliveryType(DeliveryType instance);
    partial void UpdateDeliveryType(DeliveryType instance);
    partial void DeleteDeliveryType(DeliveryType instance);
    partial void InsertDeliveryTypeLocalization(DeliveryTypeLocalization instance);
    partial void UpdateDeliveryTypeLocalization(DeliveryTypeLocalization instance);
    partial void DeleteDeliveryTypeLocalization(DeliveryTypeLocalization instance);
    partial void InsertDeliveryTypeProperty(DeliveryTypeProperty instance);
    partial void UpdateDeliveryTypeProperty(DeliveryTypeProperty instance);
    partial void DeleteDeliveryTypeProperty(DeliveryTypeProperty instance);
    partial void InsertDiscountCode(DiscountCode instance);
    partial void UpdateDiscountCode(DiscountCode instance);
    partial void DeleteDiscountCode(DiscountCode instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertItemListPrice(ItemListPrice instance);
    partial void UpdateItemListPrice(ItemListPrice instance);
    partial void DeleteItemListPrice(ItemListPrice instance);
    partial void InsertOrderLocation(OrderLocation instance);
    partial void UpdateOrderLocation(OrderLocation instance);
    partial void DeleteOrderLocation(OrderLocation instance);
    #endregion
		
		public CatalogModel(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogModel(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogModel(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogModel(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<CategoryLocalization> CategoryLocalizations
		{
			get
			{
				return this.GetTable<CategoryLocalization>();
			}
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<BrandLocalization> BrandLocalizations
		{
			get
			{
				return this.GetTable<BrandLocalization>();
			}
		}
		
		public System.Data.Linq.Table<Campaign> Campaigns
		{
			get
			{
				return this.GetTable<Campaign>();
			}
		}
		
		public System.Data.Linq.Table<CampaignLocalization> CampaignLocalizations
		{
			get
			{
				return this.GetTable<CampaignLocalization>();
			}
		}
		
		public System.Data.Linq.Table<CampaignItem> CampaignItems
		{
			get
			{
				return this.GetTable<CampaignItem>();
			}
		}
		
		public System.Data.Linq.Table<Segment> Segments
		{
			get
			{
				return this.GetTable<Segment>();
			}
		}
		
		public System.Data.Linq.Table<SegmentLocalization> SegmentLocalizations
		{
			get
			{
				return this.GetTable<SegmentLocalization>();
			}
		}
		
		public System.Data.Linq.Table<SegmentItem> SegmentItems
		{
			get
			{
				return this.GetTable<SegmentItem>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<ItemLocalization> ItemLocalizations
		{
			get
			{
				return this.GetTable<ItemLocalization>();
			}
		}
		
		public System.Data.Linq.Table<ItemPrice> ItemPrices
		{
			get
			{
				return this.GetTable<ItemPrice>();
			}
		}
		
		public System.Data.Linq.Table<StockTransaction> StockTransactions
		{
			get
			{
				return this.GetTable<StockTransaction>();
			}
		}
		
		public System.Data.Linq.Table<ItemImage> ItemImages
		{
			get
			{
				return this.GetTable<ItemImage>();
			}
		}
		
		public System.Data.Linq.Table<ItemRelation> ItemRelations
		{
			get
			{
				return this.GetTable<ItemRelation>();
			}
		}
		
		public System.Data.Linq.Table<ItemProperty> ItemProperties
		{
			get
			{
				return this.GetTable<ItemProperty>();
			}
		}
		
		public System.Data.Linq.Table<Variant> Variants
		{
			get
			{
				return this.GetTable<Variant>();
			}
		}
		
		public System.Data.Linq.Table<VariantLocalization> VariantLocalizations
		{
			get
			{
				return this.GetTable<VariantLocalization>();
			}
		}
		
		public System.Data.Linq.Table<VariantType> VariantTypes
		{
			get
			{
				return this.GetTable<VariantType>();
			}
		}
		
		public System.Data.Linq.Table<VariantTypeLocalization> VariantTypeLocalizations
		{
			get
			{
				return this.GetTable<VariantTypeLocalization>();
			}
		}
		
		public System.Data.Linq.Table<ItemVariantType> ItemVariantTypes
		{
			get
			{
				return this.GetTable<ItemVariantType>();
			}
		}
		
		public System.Data.Linq.Table<ItemVariant> ItemVariants
		{
			get
			{
				return this.GetTable<ItemVariant>();
			}
		}
		
		public System.Data.Linq.Table<ItemVariantPrice> ItemVariantPrices
		{
			get
			{
				return this.GetTable<ItemVariantPrice>();
			}
		}
		
		public System.Data.Linq.Table<VatGroup> VatGroups
		{
			get
			{
				return this.GetTable<VatGroup>();
			}
		}
		
		public System.Data.Linq.Table<PriceGroup> PriceGroups
		{
			get
			{
				return this.GetTable<PriceGroup>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<NoSerie> NoSeries
		{
			get
			{
				return this.GetTable<NoSerie>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItems
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<OrderPackage> OrderPackages
		{
			get
			{
				return this.GetTable<OrderPackage>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType> PaymentTypes
		{
			get
			{
				return this.GetTable<PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<PaymentTypeLocalization> PaymentTypeLocalizations
		{
			get
			{
				return this.GetTable<PaymentTypeLocalization>();
			}
		}
		
		public System.Data.Linq.Table<PaymentTypeProperty> PaymentTypeProperties
		{
			get
			{
				return this.GetTable<PaymentTypeProperty>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryType> DeliveryTypes
		{
			get
			{
				return this.GetTable<DeliveryType>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryTypeLocalization> DeliveryTypeLocalizations
		{
			get
			{
				return this.GetTable<DeliveryTypeLocalization>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryTypeProperty> DeliveryTypeProperties
		{
			get
			{
				return this.GetTable<DeliveryTypeProperty>();
			}
		}
		
		public System.Data.Linq.Table<DiscountCode> DiscountCodes
		{
			get
			{
				return this.GetTable<DiscountCode>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<ItemListPrice> ItemListPrices
		{
			get
			{
				return this.GetTable<ItemListPrice>();
			}
		}
		
		public System.Data.Linq.Table<OrderLocation> OrderLocations
		{
			get
			{
				return this.GetTable<OrderLocation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _CategoryNo = default(int);
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private int _Index;
		
		private bool _IsVisible;
		
		private string _Image1;
		
		private string _Image2;
		
		private string _Image3;
		
		private EntitySet<Category> _Children;
		
		private EntitySet<CategoryLocalization> _Localizations;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Category> _Parent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnIndexChanging(int value);
    partial void OnIndexChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnImage1Changing(string value);
    partial void OnImage1Changed();
    partial void OnImage2Changing(string value);
    partial void OnImage2Changed();
    partial void OnImage3Changing(string value);
    partial void OnImage3Changed();
    #endregion
		
		public Category()
		{
			this._Children = new EntitySet<Category>(new Action<Category>(this.attach_Children), new Action<Category>(this.detach_Children));
			this._Localizations = new EntitySet<CategoryLocalization>(new Action<CategoryLocalization>(this.attach_Localizations), new Action<CategoryLocalization>(this.detach_Localizations));
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Parent = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryNo", AutoSync=AutoSync.Always, DbType="Int NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int CategoryNo
		{
			get
			{
				return this._CategoryNo;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Parent", Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Int NOT NULL")]
		public int Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image1", DbType="NVarChar(255)")]
		public string Image1
		{
			get
			{
				return this._Image1;
			}
			set
			{
				if ((this._Image1 != value))
				{
					this.OnImage1Changing(value);
					this.SendPropertyChanging();
					this._Image1 = value;
					this.SendPropertyChanged("Image1");
					this.OnImage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image2", DbType="NVarChar(255)")]
		public string Image2
		{
			get
			{
				return this._Image2;
			}
			set
			{
				if ((this._Image2 != value))
				{
					this.OnImage2Changing(value);
					this.SendPropertyChanging();
					this._Image2 = value;
					this.SendPropertyChanged("Image2");
					this.OnImage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image3", DbType="NVarChar(255)")]
		public string Image3
		{
			get
			{
				return this._Image3;
			}
			set
			{
				if ((this._Image3 != value))
				{
					this.OnImage3Changing(value);
					this.SendPropertyChanging();
					this._Image3 = value;
					this.SendPropertyChanged("Image3");
					this.OnImage3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Children", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Category> Children
		{
			get
			{
				return this._Children;
			}
			set
			{
				this._Children.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CategoryLocalization", Storage="_Localizations", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<CategoryLocalization> Localizations
		{
			get
			{
				return this._Localizations;
			}
			set
			{
				this._Localizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Item", Storage="_Items", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Parent", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Category Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				Category previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Children.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Children.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Children(Category entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Children(Category entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_Localizations(CategoryLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Localizations(CategoryLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_CategoryLocalization")]
	public partial class CategoryLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _CategoryID;
		
		private string _Culture;
		
		private string _Title;
		
		private string _Description;
		
		private string _SeoKeywords;
		
		private string _SeoDescription;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCategoryIDChanging(System.Guid value);
    partial void OnCategoryIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSeoKeywordsChanging(string value);
    partial void OnSeoKeywordsChanged();
    partial void OnSeoDescriptionChanging(string value);
    partial void OnSeoDescriptionChanged();
    #endregion
		
		public CategoryLocalization()
		{
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoKeywords", DbType="NVarChar(255)")]
		public string SeoKeywords
		{
			get
			{
				return this._SeoKeywords;
			}
			set
			{
				if ((this._SeoKeywords != value))
				{
					this.OnSeoKeywordsChanging(value);
					this.SendPropertyChanging();
					this._SeoKeywords = value;
					this.SendPropertyChanged("SeoKeywords");
					this.OnSeoKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoDescription", DbType="NVarChar(255)")]
		public string SeoDescription
		{
			get
			{
				return this._SeoDescription;
			}
			set
			{
				if ((this._SeoDescription != value))
				{
					this.OnSeoDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SeoDescription = value;
					this.SendPropertyChanged("SeoDescription");
					this.OnSeoDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CategoryLocalization", Storage="_Category", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Localizations.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Localizations.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(System.Guid);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Brand")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private int _Index;
		
		private string _Name;
		
		private string _Image1;
		
		private string _Image2;
		
		private string _Image3;
		
		private EntitySet<Brand> _Children;
		
		private EntitySet<BrandLocalization> _Localizations;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Brand> _Parent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnIndexChanging(int value);
    partial void OnIndexChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImage1Changing(string value);
    partial void OnImage1Changed();
    partial void OnImage2Changing(string value);
    partial void OnImage2Changed();
    partial void OnImage3Changing(string value);
    partial void OnImage3Changed();
    #endregion
		
		public Brand()
		{
			this._Children = new EntitySet<Brand>(new Action<Brand>(this.attach_Children), new Action<Brand>(this.detach_Children));
			this._Localizations = new EntitySet<BrandLocalization>(new Action<BrandLocalization>(this.attach_Localizations), new Action<BrandLocalization>(this.detach_Localizations));
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Parent = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NULL")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Int NOT NULL")]
		public int Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image1", DbType="NVarChar(255)")]
		public string Image1
		{
			get
			{
				return this._Image1;
			}
			set
			{
				if ((this._Image1 != value))
				{
					this.OnImage1Changing(value);
					this.SendPropertyChanging();
					this._Image1 = value;
					this.SendPropertyChanged("Image1");
					this.OnImage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image2", DbType="NVarChar(255)")]
		public string Image2
		{
			get
			{
				return this._Image2;
			}
			set
			{
				if ((this._Image2 != value))
				{
					this.OnImage2Changing(value);
					this.SendPropertyChanging();
					this._Image2 = value;
					this.SendPropertyChanged("Image2");
					this.OnImage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image3", DbType="NVarChar(255)")]
		public string Image3
		{
			get
			{
				return this._Image3;
			}
			set
			{
				if ((this._Image3 != value))
				{
					this.OnImage3Changing(value);
					this.SendPropertyChanging();
					this._Image3 = value;
					this.SendPropertyChanged("Image3");
					this.OnImage3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Brand", Storage="_Children", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Brand> Children
		{
			get
			{
				return this._Children;
			}
			set
			{
				this._Children.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_BrandLocalization", Storage="_Localizations", ThisKey="ID", OtherKey="BrandID")]
		public EntitySet<BrandLocalization> Localizations
		{
			get
			{
				return this._Localizations;
			}
			set
			{
				this._Localizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Item", Storage="_Items", ThisKey="ID", OtherKey="BrandID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Brand", Storage="_Parent", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Brand Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				Brand previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Children.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Children.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Children(Brand entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Children(Brand entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_Localizations(BrandLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Localizations(BrandLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_BrandLocalization")]
	public partial class BrandLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _BrandID;
		
		private string _Culture;
		
		private string _Description;
		
		private string _SeoKeywords;
		
		private string _SeoDescription;
		
		private EntityRef<Brand> _Brand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnBrandIDChanging(System.Guid value);
    partial void OnBrandIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSeoKeywordsChanging(string value);
    partial void OnSeoKeywordsChanged();
    partial void OnSeoDescriptionChanging(string value);
    partial void OnSeoDescriptionChanged();
    #endregion
		
		public BrandLocalization()
		{
			this._Brand = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoKeywords", DbType="NVarChar(250)")]
		public string SeoKeywords
		{
			get
			{
				return this._SeoKeywords;
			}
			set
			{
				if ((this._SeoKeywords != value))
				{
					this.OnSeoKeywordsChanging(value);
					this.SendPropertyChanging();
					this._SeoKeywords = value;
					this.SendPropertyChanged("SeoKeywords");
					this.OnSeoKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoDescription", DbType="NVarChar(2000)")]
		public string SeoDescription
		{
			get
			{
				return this._SeoDescription;
			}
			set
			{
				if ((this._SeoDescription != value))
				{
					this.OnSeoDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SeoDescription = value;
					this.SendPropertyChanged("SeoDescription");
					this.OnSeoDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_BrandLocalization", Storage="_Brand", ThisKey="BrandID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Localizations.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Localizations.Add(this);
						this._BrandID = value.ID;
					}
					else
					{
						this._BrandID = default(System.Guid);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Campaign")]
	public partial class Campaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Name;
		
		private int _Index;
		
		private bool _IsVisible;
		
		private EntitySet<CampaignLocalization> _Localizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public Campaign()
		{
			this._Localizations = new EntitySet<CampaignLocalization>(new Action<CampaignLocalization>(this.attach_Localizations), new Action<CampaignLocalization>(this.detach_Localizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Index", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignLocalization", Storage="_Localizations", ThisKey="ID", OtherKey="CampaignID")]
		public EntitySet<CampaignLocalization> Localizations
		{
			get
			{
				return this._Localizations;
			}
			set
			{
				this._Localizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Localizations(CampaignLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Localizations(CampaignLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_CampaignLocalization")]
	public partial class CampaignLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _CampaignID;
		
		private string _Culture;
		
		private string _Description;
		
		private string _Title;
		
		private EntityRef<Campaign> _Campaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCampaignIDChanging(System.Guid value);
    partial void OnCampaignIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public CampaignLocalization()
		{
			this._Campaign = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignLocalization", Storage="_Campaign", ThisKey="CampaignID", OtherKey="ID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Localizations.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Localizations.Add(this);
						this._CampaignID = value.ID;
					}
					else
					{
						this._CampaignID = default(System.Guid);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_CampaignItem")]
	public partial class CampaignItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _CampaignID;
		
		private System.Guid _ItemID;
		
		private int _DisplayIndex;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCampaignIDChanging(System.Guid value);
    partial void OnCampaignIDChanged();
    partial void OnItemIDChanging(System.Guid value);
    partial void OnItemIDChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    #endregion
		
		public CampaignItem()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignItem", Storage="_Campaign", ThisKey="CampaignID", OtherKey="ID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				if ((this._Campaign.Entity != value))
				{
					this.SendPropertyChanging();
					this._Campaign.Entity = value;
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_CampaignItem", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				if ((this._Item.Entity != value))
				{
					this.SendPropertyChanging();
					this._Item.Entity = value;
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Segment")]
	public partial class Segment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _DisplayIndex;
		
		private bool _IsActive;
		
		private EntitySet<SegmentLocalization> _Localizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Segment()
		{
			this._Localizations = new EntitySet<SegmentLocalization>(new Action<SegmentLocalization>(this.attach_Localizations), new Action<SegmentLocalization>(this.detach_Localizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_SegmentLocalization", Storage="_Localizations", ThisKey="ID", OtherKey="SegmentID")]
		public EntitySet<SegmentLocalization> Localizations
		{
			get
			{
				return this._Localizations;
			}
			set
			{
				this._Localizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Localizations(SegmentLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Segment = this;
		}
		
		private void detach_Localizations(SegmentLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Segment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_SegmentLocalization")]
	public partial class SegmentLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _SegmentID;
		
		private string _Culture;
		
		private string _Description;
		
		private string _Title;
		
		private EntityRef<Segment> _Segment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnSegmentIDChanging(System.Guid value);
    partial void OnSegmentIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public SegmentLocalization()
		{
			this._Segment = default(EntityRef<Segment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._Segment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_SegmentLocalization", Storage="_Segment", ThisKey="SegmentID", OtherKey="ID", IsForeignKey=true)]
		public Segment Segment
		{
			get
			{
				return this._Segment.Entity;
			}
			set
			{
				Segment previousValue = this._Segment.Entity;
				if (((previousValue != value) 
							|| (this._Segment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Segment.Entity = null;
						previousValue.Localizations.Remove(this);
					}
					this._Segment.Entity = value;
					if ((value != null))
					{
						value.Localizations.Add(this);
						this._SegmentID = value.ID;
					}
					else
					{
						this._SegmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Segment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_SegmentItem")]
	public partial class SegmentItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _SegmentID;
		
		private System.Guid _ItemID;
		
		private int _DisplayIndex;
		
		private EntityRef<Segment> _Segment;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnSegmentIDChanging(System.Guid value);
    partial void OnSegmentIDChanged();
    partial void OnItemIDChanging(System.Guid value);
    partial void OnItemIDChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    #endregion
		
		public SegmentItem()
		{
			this._Segment = default(EntityRef<Segment>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._Segment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_SegmentItem", Storage="_Segment", ThisKey="SegmentID", OtherKey="ID", IsForeignKey=true)]
		public Segment Segment
		{
			get
			{
				return this._Segment.Entity;
			}
			set
			{
				if ((this._Segment.Entity != value))
				{
					this.SendPropertyChanging();
					this._Segment.Entity = value;
					this.SendPropertyChanged("Segment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_SegmentItem", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				if ((this._Item.Entity != value))
				{
					this.SendPropertyChanging();
					this._Item.Entity = value;
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _SequenceNumber = default(int);
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _ItemNo;
		
		private bool _IsActive;
		
		private System.Nullable<System.Guid> _CategoryID;
		
		private int _Index;
		
		private System.Nullable<System.Guid> _BrandID;
		
		private int _BrandIndex;
		
		private global::nCode.Catalog.Models.VariantMode _VariantMode;
		
		private bool _UseStockControl;
		
		private int _StockQuantity;
		
		private int _ReservedQuantity;
		
		private bool _IsSoldOut;
		
		private string _VatGroupCode;
		
		private string _CostCurrencyCode;
		
		private decimal _CostPrice;
		
		private decimal _Weight;
		
		private string _UnitCode;
		
		private string _Ean;
		
		private System.Nullable<int> _MinimumOrderQuantity;
		
		private System.Nullable<int> _MultipleOrderQuantity;
		
		private bool _OnSale;
		
		private EntitySet<ItemLocalization> _ItemLocalizations;
		
		private EntitySet<ItemPrice> _Prices;
		
		private EntitySet<ItemImage> _ItemImages;
		
		private EntitySet<ItemProperty> _Properties;
		
		private EntitySet<ItemVariantType> _ItemVariantTypes;
		
		private EntitySet<ItemListPrice> _ListPrices;
		
		private EntityRef<Brand> _Brand;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCategoryIDChanging(System.Nullable<System.Guid> value);
    partial void OnCategoryIDChanged();
    partial void OnIndexChanging(int value);
    partial void OnIndexChanged();
    partial void OnBrandIDChanging(System.Nullable<System.Guid> value);
    partial void OnBrandIDChanged();
    partial void OnBrandIndexChanging(int value);
    partial void OnBrandIndexChanged();
    partial void OnVariantModeChanging(global::nCode.Catalog.Models.VariantMode value);
    partial void OnVariantModeChanged();
    partial void OnUseStockControlChanging(bool value);
    partial void OnUseStockControlChanged();
    partial void OnStockQuantityChanging(int value);
    partial void OnStockQuantityChanged();
    partial void OnReservedQuantityChanging(int value);
    partial void OnReservedQuantityChanged();
    partial void OnIsSoldOutChanging(bool value);
    partial void OnIsSoldOutChanged();
    partial void OnVatGroupCodeChanging(string value);
    partial void OnVatGroupCodeChanged();
    partial void OnCostCurrencyCodeChanging(string value);
    partial void OnCostCurrencyCodeChanged();
    partial void OnCostPriceChanging(decimal value);
    partial void OnCostPriceChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnUnitCodeChanging(string value);
    partial void OnUnitCodeChanged();
    partial void OnEanChanging(string value);
    partial void OnEanChanged();
    partial void OnMinimumOrderQuantityChanging(System.Nullable<int> value);
    partial void OnMinimumOrderQuantityChanged();
    partial void OnMultipleOrderQuantityChanging(System.Nullable<int> value);
    partial void OnMultipleOrderQuantityChanged();
    partial void OnOnSaleChanging(bool value);
    partial void OnOnSaleChanged();
    #endregion
		
		public Item()
		{
			this._ItemLocalizations = new EntitySet<ItemLocalization>(new Action<ItemLocalization>(this.attach_ItemLocalizations), new Action<ItemLocalization>(this.detach_ItemLocalizations));
			this._Prices = new EntitySet<ItemPrice>(new Action<ItemPrice>(this.attach_Prices), new Action<ItemPrice>(this.detach_Prices));
			this._ItemImages = new EntitySet<ItemImage>(new Action<ItemImage>(this.attach_ItemImages), new Action<ItemImage>(this.detach_ItemImages));
			this._Properties = new EntitySet<ItemProperty>(new Action<ItemProperty>(this.attach_Properties), new Action<ItemProperty>(this.detach_Properties));
			this._ItemVariantTypes = new EntitySet<ItemVariantType>(new Action<ItemVariantType>(this.attach_ItemVariantTypes), new Action<ItemVariantType>(this.detach_ItemVariantTypes));
			this._ListPrices = new EntitySet<ItemListPrice>(new Action<ItemListPrice>(this.attach_ListPrices), new Action<ItemListPrice>(this.detach_ListPrices));
			this._Brand = default(EntityRef<Brand>);
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Category", Storage="_CategoryID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Int NOT NULL")]
		public int Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Brand", Storage="_BrandID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandIndex", DbType="Int NOT NULL")]
		public int BrandIndex
		{
			get
			{
				return this._BrandIndex;
			}
			set
			{
				if ((this._BrandIndex != value))
				{
					this.OnBrandIndexChanging(value);
					this.SendPropertyChanging();
					this._BrandIndex = value;
					this.SendPropertyChanged("BrandIndex");
					this.OnBrandIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantMode", DbType="Int NOT NULL", CanBeNull=false)]
		public global::nCode.Catalog.Models.VariantMode VariantMode
		{
			get
			{
				return this._VariantMode;
			}
			set
			{
				if ((this._VariantMode != value))
				{
					this.OnVariantModeChanging(value);
					this.SendPropertyChanging();
					this._VariantMode = value;
					this.SendPropertyChanged("VariantMode");
					this.OnVariantModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseStockControl", DbType="Bit NOT NULL")]
		public bool UseStockControl
		{
			get
			{
				return this._UseStockControl;
			}
			set
			{
				if ((this._UseStockControl != value))
				{
					this.OnUseStockControlChanging(value);
					this.SendPropertyChanging();
					this._UseStockControl = value;
					this.SendPropertyChanged("UseStockControl");
					this.OnUseStockControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockQuantity", DbType="Int NOT NULL")]
		public int StockQuantity
		{
			get
			{
				return this._StockQuantity;
			}
			set
			{
				if ((this._StockQuantity != value))
				{
					this.OnStockQuantityChanging(value);
					this.SendPropertyChanging();
					this._StockQuantity = value;
					this.SendPropertyChanged("StockQuantity");
					this.OnStockQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservedQuantity", DbType="Int NOT NULL")]
		public int ReservedQuantity
		{
			get
			{
				return this._ReservedQuantity;
			}
			set
			{
				if ((this._ReservedQuantity != value))
				{
					this.OnReservedQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReservedQuantity = value;
					this.SendPropertyChanged("ReservedQuantity");
					this.OnReservedQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSoldOut", DbType="Bit NOT NULL")]
		public bool IsSoldOut
		{
			get
			{
				return this._IsSoldOut;
			}
			set
			{
				if ((this._IsSoldOut != value))
				{
					this.OnIsSoldOutChanging(value);
					this.SendPropertyChanging();
					this._IsSoldOut = value;
					this.SendPropertyChanged("IsSoldOut");
					this.OnIsSoldOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatGroupCode", DbType="NVarChar(20) NULL")]
		public string VatGroupCode
		{
			get
			{
				return this._VatGroupCode;
			}
			set
			{
				if ((this._VatGroupCode != value))
				{
					this.OnVatGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._VatGroupCode = value;
					this.SendPropertyChanged("VatGroupCode");
					this.OnVatGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCurrencyCode", DbType="NVarChar(20) NULL")]
		public string CostCurrencyCode
		{
			get
			{
				return this._CostCurrencyCode;
			}
			set
			{
				if ((this._CostCurrencyCode != value))
				{
					this.OnCostCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CostCurrencyCode = value;
					this.SendPropertyChanged("CostCurrencyCode");
					this.OnCostCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal CostPrice
		{
			get
			{
				return this._CostPrice;
			}
			set
			{
				if ((this._CostPrice != value))
				{
					this.OnCostPriceChanging(value);
					this.SendPropertyChanging();
					this._CostPrice = value;
					this.SendPropertyChanged("CostPrice");
					this.OnCostPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(20) NULL")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this.OnUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitCode = value;
					this.SendPropertyChanged("UnitCode");
					this.OnUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(13) NULL")]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this.OnEanChanging(value);
					this.SendPropertyChanging();
					this._Ean = value;
					this.SendPropertyChanged("Ean");
					this.OnEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumOrderQuantity", DbType="Int NULL")]
		public System.Nullable<int> MinimumOrderQuantity
		{
			get
			{
				return this._MinimumOrderQuantity;
			}
			set
			{
				if ((this._MinimumOrderQuantity != value))
				{
					this.OnMinimumOrderQuantityChanging(value);
					this.SendPropertyChanging();
					this._MinimumOrderQuantity = value;
					this.SendPropertyChanged("MinimumOrderQuantity");
					this.OnMinimumOrderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultipleOrderQuantity", DbType="Int NULL")]
		public System.Nullable<int> MultipleOrderQuantity
		{
			get
			{
				return this._MultipleOrderQuantity;
			}
			set
			{
				if ((this._MultipleOrderQuantity != value))
				{
					this.OnMultipleOrderQuantityChanging(value);
					this.SendPropertyChanging();
					this._MultipleOrderQuantity = value;
					this.SendPropertyChanged("MultipleOrderQuantity");
					this.OnMultipleOrderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnSale", DbType="Bit NOT NULL")]
		public bool OnSale
		{
			get
			{
				return this._OnSale;
			}
			set
			{
				if ((this._OnSale != value))
				{
					this.OnOnSaleChanging(value);
					this.SendPropertyChanging();
					this._OnSale = value;
					this.SendPropertyChanged("OnSale");
					this.OnOnSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemLocalization", Storage="_ItemLocalizations", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<ItemLocalization> Localizations
		{
			get
			{
				return this._ItemLocalizations;
			}
			set
			{
				this._ItemLocalizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemPrice", Storage="_Prices", ThisKey="ItemNo", OtherKey="ItemNo")]
		public EntitySet<ItemPrice> Prices
		{
			get
			{
				return this._Prices;
			}
			set
			{
				this._Prices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemImage", Storage="_ItemImages", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<ItemImage> Images
		{
			get
			{
				return this._ItemImages;
			}
			set
			{
				this._ItemImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemProperty", Storage="_Properties", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<ItemProperty> Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				this._Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemVariantType", Storage="_ItemVariantTypes", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<ItemVariantType> ItemVariantTypes
		{
			get
			{
				return this._ItemVariantTypes;
			}
			set
			{
				this._ItemVariantTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemListPrice", Storage="_ListPrices", ThisKey="ItemNo", OtherKey="ItemNo")]
		public EntitySet<ItemListPrice> ListPrices
		{
			get
			{
				return this._ListPrices;
			}
			set
			{
				this._ListPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Item", Storage="_Brand", ThisKey="BrandID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._BrandID = value.ID;
					}
					else
					{
						this._BrandID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Item", Storage="_Category", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemLocalizations(ItemLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ItemLocalizations(ItemLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_Prices(ItemPrice entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Prices(ItemPrice entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_ItemImages(ItemImage entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ItemImages(ItemImage entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_Properties(ItemProperty entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Properties(ItemProperty entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_ItemVariantTypes(ItemVariantType entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ItemVariantTypes(ItemVariantType entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_ListPrices(ItemListPrice entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ListPrices(ItemListPrice entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_ItemLocalization")]
	public partial class ItemLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _ItemID;
		
		private string _Culture;
		
		private string _Title;
		
		private string _Description;
		
		private string _SeoKeywords;
		
		private string _SeoDescription;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnItemIDChanging(System.Guid value);
    partial void OnItemIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSeoKeywordsChanging(string value);
    partial void OnSeoKeywordsChanged();
    partial void OnSeoDescriptionChanging(string value);
    partial void OnSeoDescriptionChanged();
    #endregion
		
		public ItemLocalization()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Item", Storage="_ItemID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoKeywords", DbType="NVarChar(255)")]
		public string SeoKeywords
		{
			get
			{
				return this._SeoKeywords;
			}
			set
			{
				if ((this._SeoKeywords != value))
				{
					this.OnSeoKeywordsChanging(value);
					this.SendPropertyChanging();
					this._SeoKeywords = value;
					this.SendPropertyChanged("SeoKeywords");
					this.OnSeoKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoDescription", DbType="NVarChar(255)")]
		public string SeoDescription
		{
			get
			{
				return this._SeoDescription;
			}
			set
			{
				if ((this._SeoDescription != value))
				{
					this.OnSeoDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SeoDescription = value;
					this.SendPropertyChanged("SeoDescription");
					this.OnSeoDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemLocalization", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Localizations.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Localizations.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(System.Guid);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_ItemPrice")]
	public partial class ItemPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _ItemNo;
		
		private string _PriceGroupCode;
		
		private string _CurrencyCode;
		
		private decimal _Price;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnPriceGroupCodeChanging(string value);
    partial void OnPriceGroupCodeChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public ItemPrice()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceGroupCode", DbType="NVarChar(20) NULL")]
		public string PriceGroupCode
		{
			get
			{
				return this._PriceGroupCode;
			}
			set
			{
				if ((this._PriceGroupCode != value))
				{
					this.OnPriceGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._PriceGroupCode = value;
					this.SendPropertyChanged("PriceGroupCode");
					this.OnPriceGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemPrice", Storage="_Item", ThisKey="ItemNo", OtherKey="ItemNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Prices.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Prices.Add(this);
						this._ItemNo = value.ItemNo;
					}
					else
					{
						this._ItemNo = default(string);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_StockTransaction")]
	public partial class StockTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ItemNo;
		
		private System.DateTime _Date;
		
		private string _OrderNo;
		
		private int _Qty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    #endregion
		
		public StockTransaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="NVarChar(20) NOT NULL")]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int NOT NULL")]
		public int Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_ItemImage")]
	public partial class ItemImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _ItemID;
		
		private int _DisplayIndex;
		
		private string _ImageFile;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnItemIDChanging(System.Guid value);
    partial void OnItemIDChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    #endregion
		
		public ItemImage()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemImage", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(System.Guid);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_ItemRelation")]
	public partial class ItemRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ItemID;
		
		private int _DisplayIndex;
		
		private System.Guid _RelatedItemID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnItemIDChanging(System.Guid value);
    partial void OnItemIDChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    partial void OnRelatedItemIDChanging(System.Guid value);
    partial void OnRelatedItemIDChanged();
    #endregion
		
		public ItemRelation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedItemID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RelatedItemID
		{
			get
			{
				return this._RelatedItemID;
			}
			set
			{
				if ((this._RelatedItemID != value))
				{
					this.OnRelatedItemIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedItemID = value;
					this.SendPropertyChanged("RelatedItemID");
					this.OnRelatedItemIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_ItemProperty")]
	public partial class ItemProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ItemID;
		
		private string _Key;
		
		private string _Value;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnItemIDChanging(System.Guid value);
    partial void OnItemIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ItemProperty()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemProperty", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Properties.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Properties.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(System.Guid);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Variant")]
	public partial class Variant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _VariantTypeID;
		
		private int _DisplayIndex;
		
		private string _Name;
		
		private EntitySet<VariantLocalization> _VariantLocalizations;
		
		private EntitySet<ItemVariant> _ItemVariants;
		
		private EntityRef<VariantType> _VariantType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnVariantTypeIDChanging(System.Guid value);
    partial void OnVariantTypeIDChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Variant()
		{
			this._VariantLocalizations = new EntitySet<VariantLocalization>(new Action<VariantLocalization>(this.attach_VariantLocalizations), new Action<VariantLocalization>(this.detach_VariantLocalizations));
			this._ItemVariants = new EntitySet<ItemVariant>(new Action<ItemVariant>(this.attach_ItemVariants), new Action<ItemVariant>(this.detach_ItemVariants));
			this._VariantType = default(EntityRef<VariantType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VariantTypeID
		{
			get
			{
				return this._VariantTypeID;
			}
			set
			{
				if ((this._VariantTypeID != value))
				{
					if (this._VariantType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVariantTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VariantTypeID = value;
					this.SendPropertyChanged("VariantTypeID");
					this.OnVariantTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Variant_VariantLocalization", Storage="_VariantLocalizations", ThisKey="ID", OtherKey="VariantID")]
		public EntitySet<VariantLocalization> Localizations
		{
			get
			{
				return this._VariantLocalizations;
			}
			set
			{
				this._VariantLocalizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Variant_ItemVariant", Storage="_ItemVariants", ThisKey="ID", OtherKey="VariantID")]
		public EntitySet<ItemVariant> ItemVariants
		{
			get
			{
				return this._ItemVariants;
			}
			set
			{
				this._ItemVariants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VariantType_Variant", Storage="_VariantType", ThisKey="VariantTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public VariantType VariantType
		{
			get
			{
				return this._VariantType.Entity;
			}
			set
			{
				VariantType previousValue = this._VariantType.Entity;
				if (((previousValue != value) 
							|| (this._VariantType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VariantType.Entity = null;
						previousValue.Variants.Remove(this);
					}
					this._VariantType.Entity = value;
					if ((value != null))
					{
						value.Variants.Add(this);
						this._VariantTypeID = value.ID;
					}
					else
					{
						this._VariantTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("VariantType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VariantLocalizations(VariantLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Variant = this;
		}
		
		private void detach_VariantLocalizations(VariantLocalization entity)
		{
			this.SendPropertyChanging();
			entity.Variant = null;
		}
		
		private void attach_ItemVariants(ItemVariant entity)
		{
			this.SendPropertyChanging();
			entity.Variant = this;
		}
		
		private void detach_ItemVariants(ItemVariant entity)
		{
			this.SendPropertyChanging();
			entity.Variant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_VariantLocalization")]
	public partial class VariantLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _VariantID;
		
		private string _Culture;
		
		private string _DisplayName;
		
		private EntityRef<Variant> _Variant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnVariantIDChanging(System.Guid value);
    partial void OnVariantIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    #endregion
		
		public VariantLocalization()
		{
			this._Variant = default(EntityRef<Variant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VariantID
		{
			get
			{
				return this._VariantID;
			}
			set
			{
				if ((this._VariantID != value))
				{
					if (this._Variant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVariantIDChanging(value);
					this.SendPropertyChanging();
					this._VariantID = value;
					this.SendPropertyChanged("VariantID");
					this.OnVariantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Variant_VariantLocalization", Storage="_Variant", ThisKey="VariantID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Variant Variant
		{
			get
			{
				return this._Variant.Entity;
			}
			set
			{
				Variant previousValue = this._Variant.Entity;
				if (((previousValue != value) 
							|| (this._Variant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Variant.Entity = null;
						previousValue.Localizations.Remove(this);
					}
					this._Variant.Entity = value;
					if ((value != null))
					{
						value.Localizations.Add(this);
						this._VariantID = value.ID;
					}
					else
					{
						this._VariantID = default(System.Guid);
					}
					this.SendPropertyChanged("Variant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_VariantType")]
	public partial class VariantType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _DisplayIndex;
		
		private string _Name;
		
		private EntitySet<Variant> _Variants;
		
		private EntitySet<VariantTypeLocalization> _VariantTypeLocalizations;
		
		private EntitySet<ItemVariantType> _ItemVariantTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public VariantType()
		{
			this._Variants = new EntitySet<Variant>(new Action<Variant>(this.attach_Variants), new Action<Variant>(this.detach_Variants));
			this._VariantTypeLocalizations = new EntitySet<VariantTypeLocalization>(new Action<VariantTypeLocalization>(this.attach_VariantTypeLocalizations), new Action<VariantTypeLocalization>(this.detach_VariantTypeLocalizations));
			this._ItemVariantTypes = new EntitySet<ItemVariantType>(new Action<ItemVariantType>(this.attach_ItemVariantTypes), new Action<ItemVariantType>(this.detach_ItemVariantTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VariantType_Variant", Storage="_Variants", ThisKey="ID", OtherKey="VariantTypeID")]
		public EntitySet<Variant> Variants
		{
			get
			{
				return this._Variants;
			}
			set
			{
				this._Variants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VariantType_VariantTypeLocalization", Storage="_VariantTypeLocalizations", ThisKey="ID", OtherKey="VariantTypeID")]
		public EntitySet<VariantTypeLocalization> Localizations
		{
			get
			{
				return this._VariantTypeLocalizations;
			}
			set
			{
				this._VariantTypeLocalizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VariantType_ItemVariantType", Storage="_ItemVariantTypes", ThisKey="ID", OtherKey="VariantTypeID")]
		public EntitySet<ItemVariantType> ItemVariantTypes
		{
			get
			{
				return this._ItemVariantTypes;
			}
			set
			{
				this._ItemVariantTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Variants(Variant entity)
		{
			this.SendPropertyChanging();
			entity.VariantType = this;
		}
		
		private void detach_Variants(Variant entity)
		{
			this.SendPropertyChanging();
			entity.VariantType = null;
		}
		
		private void attach_VariantTypeLocalizations(VariantTypeLocalization entity)
		{
			this.SendPropertyChanging();
			entity.VariantType = this;
		}
		
		private void detach_VariantTypeLocalizations(VariantTypeLocalization entity)
		{
			this.SendPropertyChanging();
			entity.VariantType = null;
		}
		
		private void attach_ItemVariantTypes(ItemVariantType entity)
		{
			this.SendPropertyChanging();
			entity.VariantType = this;
		}
		
		private void detach_ItemVariantTypes(ItemVariantType entity)
		{
			this.SendPropertyChanging();
			entity.VariantType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_VariantTypeLocalization")]
	public partial class VariantTypeLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _VariantTypeID;
		
		private string _Culture;
		
		private string _DisplayName;
		
		private EntityRef<VariantType> _VariantType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnVariantTypeIDChanging(System.Guid value);
    partial void OnVariantTypeIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    #endregion
		
		public VariantTypeLocalization()
		{
			this._VariantType = default(EntityRef<VariantType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VariantTypeID
		{
			get
			{
				return this._VariantTypeID;
			}
			set
			{
				if ((this._VariantTypeID != value))
				{
					if (this._VariantType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVariantTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VariantTypeID = value;
					this.SendPropertyChanged("VariantTypeID");
					this.OnVariantTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VariantType_VariantTypeLocalization", Storage="_VariantType", ThisKey="VariantTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public VariantType VariantType
		{
			get
			{
				return this._VariantType.Entity;
			}
			set
			{
				VariantType previousValue = this._VariantType.Entity;
				if (((previousValue != value) 
							|| (this._VariantType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VariantType.Entity = null;
						previousValue.Localizations.Remove(this);
					}
					this._VariantType.Entity = value;
					if ((value != null))
					{
						value.Localizations.Add(this);
						this._VariantTypeID = value.ID;
					}
					else
					{
						this._VariantTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("VariantType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_ItemVariantType")]
	public partial class ItemVariantType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _ItemID;
		
		private System.Guid _VariantTypeID;
		
		private int _Depth;
		
		private EntitySet<ItemVariant> _ItemVariants;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<VariantType> _VariantType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnItemIDChanging(System.Guid value);
    partial void OnItemIDChanged();
    partial void OnVariantTypeIDChanging(System.Guid value);
    partial void OnVariantTypeIDChanged();
    partial void OnDepthChanging(int value);
    partial void OnDepthChanged();
    #endregion
		
		public ItemVariantType()
		{
			this._ItemVariants = new EntitySet<ItemVariant>(new Action<ItemVariant>(this.attach_ItemVariants), new Action<ItemVariant>(this.detach_ItemVariants));
			this._Item = default(EntityRef<Item>);
			this._VariantType = default(EntityRef<VariantType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VariantTypeID
		{
			get
			{
				return this._VariantTypeID;
			}
			set
			{
				if ((this._VariantTypeID != value))
				{
					if (this._VariantType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVariantTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VariantTypeID = value;
					this.SendPropertyChanged("VariantTypeID");
					this.OnVariantTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depth", DbType="Int NOT NULL")]
		public int Depth
		{
			get
			{
				return this._Depth;
			}
			set
			{
				if ((this._Depth != value))
				{
					this.OnDepthChanging(value);
					this.SendPropertyChanging();
					this._Depth = value;
					this.SendPropertyChanged("Depth");
					this.OnDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemVariantType_ItemVariant", Storage="_ItemVariants", ThisKey="ID", OtherKey="ItemVariantTypeID")]
		public EntitySet<ItemVariant> ItemVariants
		{
			get
			{
				return this._ItemVariants;
			}
			set
			{
				this._ItemVariants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemVariantType", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ItemVariantTypes.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ItemVariantTypes.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(System.Guid);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VariantType_ItemVariantType", Storage="_VariantType", ThisKey="VariantTypeID", OtherKey="ID", IsForeignKey=true)]
		public VariantType VariantType
		{
			get
			{
				return this._VariantType.Entity;
			}
			set
			{
				VariantType previousValue = this._VariantType.Entity;
				if (((previousValue != value) 
							|| (this._VariantType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VariantType.Entity = null;
						previousValue.ItemVariantTypes.Remove(this);
					}
					this._VariantType.Entity = value;
					if ((value != null))
					{
						value.ItemVariantTypes.Add(this);
						this._VariantTypeID = value.ID;
					}
					else
					{
						this._VariantTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("VariantType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemVariants(ItemVariant entity)
		{
			this.SendPropertyChanging();
			entity.ItemVariantType = this;
		}
		
		private void detach_ItemVariants(ItemVariant entity)
		{
			this.SendPropertyChanging();
			entity.ItemVariantType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_ItemVariant")]
	public partial class ItemVariant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Guid _ItemVariantTypeID;
		
		private System.Guid _VariantID;
		
		private string _VariantNo;
		
		private System.Nullable<decimal> _CostPrice;
		
		private int _StockQuantity;
		
		private int _ReservedQuantity;
		
		private bool _IsSoldOut;
		
		private bool _IsLeaf;
		
		private EntitySet<ItemVariantPrice> _ItemVariantPrices;
		
		private EntityRef<ItemVariantType> _ItemVariantType;
		
		private EntityRef<Variant> _Variant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnItemVariantTypeIDChanging(System.Guid value);
    partial void OnItemVariantTypeIDChanged();
    partial void OnVariantIDChanging(System.Guid value);
    partial void OnVariantIDChanged();
    partial void OnVariantNoChanging(string value);
    partial void OnVariantNoChanged();
    partial void OnCostPriceChanging(System.Nullable<decimal> value);
    partial void OnCostPriceChanged();
    partial void OnStockQuantityChanging(int value);
    partial void OnStockQuantityChanged();
    partial void OnReservedQuantityChanging(int value);
    partial void OnReservedQuantityChanged();
    partial void OnIsSoldOutChanging(bool value);
    partial void OnIsSoldOutChanged();
    partial void OnIsLeafChanging(bool value);
    partial void OnIsLeafChanged();
    #endregion
		
		public ItemVariant()
		{
			this._ItemVariantPrices = new EntitySet<ItemVariantPrice>(new Action<ItemVariantPrice>(this.attach_ItemVariantPrices), new Action<ItemVariantPrice>(this.detach_ItemVariantPrices));
			this._ItemVariantType = default(EntityRef<ItemVariantType>);
			this._Variant = default(EntityRef<Variant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemVariantTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemVariantTypeID
		{
			get
			{
				return this._ItemVariantTypeID;
			}
			set
			{
				if ((this._ItemVariantTypeID != value))
				{
					if (this._ItemVariantType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemVariantTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ItemVariantTypeID = value;
					this.SendPropertyChanged("ItemVariantTypeID");
					this.OnItemVariantTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VariantID
		{
			get
			{
				return this._VariantID;
			}
			set
			{
				if ((this._VariantID != value))
				{
					if (this._Variant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVariantIDChanging(value);
					this.SendPropertyChanging();
					this._VariantID = value;
					this.SendPropertyChanged("VariantID");
					this.OnVariantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantNo", DbType="NVarChar(255)")]
		public string VariantNo
		{
			get
			{
				return this._VariantNo;
			}
			set
			{
				if ((this._VariantNo != value))
				{
					this.OnVariantNoChanging(value);
					this.SendPropertyChanging();
					this._VariantNo = value;
					this.SendPropertyChanged("VariantNo");
					this.OnVariantNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPrice", DbType="Decimal(18,2) NULL")]
		public System.Nullable<decimal> CostPrice
		{
			get
			{
				return this._CostPrice;
			}
			set
			{
				if ((this._CostPrice != value))
				{
					this.OnCostPriceChanging(value);
					this.SendPropertyChanging();
					this._CostPrice = value;
					this.SendPropertyChanged("CostPrice");
					this.OnCostPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockQuantity", DbType="Int NOT NULL")]
		public int StockQuantity
		{
			get
			{
				return this._StockQuantity;
			}
			set
			{
				if ((this._StockQuantity != value))
				{
					this.OnStockQuantityChanging(value);
					this.SendPropertyChanging();
					this._StockQuantity = value;
					this.SendPropertyChanged("StockQuantity");
					this.OnStockQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservedQuantity", DbType="Int NOT NULL")]
		public int ReservedQuantity
		{
			get
			{
				return this._ReservedQuantity;
			}
			set
			{
				if ((this._ReservedQuantity != value))
				{
					this.OnReservedQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReservedQuantity = value;
					this.SendPropertyChanged("ReservedQuantity");
					this.OnReservedQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSoldOut", DbType="Bit NOT NULL")]
		public bool IsSoldOut
		{
			get
			{
				return this._IsSoldOut;
			}
			set
			{
				if ((this._IsSoldOut != value))
				{
					this.OnIsSoldOutChanging(value);
					this.SendPropertyChanging();
					this._IsSoldOut = value;
					this.SendPropertyChanged("IsSoldOut");
					this.OnIsSoldOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLeaf", DbType="Bit NOT NULL")]
		public bool IsLeaf
		{
			get
			{
				return this._IsLeaf;
			}
			set
			{
				if ((this._IsLeaf != value))
				{
					this.OnIsLeafChanging(value);
					this.SendPropertyChanging();
					this._IsLeaf = value;
					this.SendPropertyChanged("IsLeaf");
					this.OnIsLeafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemVariant_ItemVariantPrice", Storage="_ItemVariantPrices", ThisKey="ID", OtherKey="ItemVariantID")]
		public EntitySet<ItemVariantPrice> Prices
		{
			get
			{
				return this._ItemVariantPrices;
			}
			set
			{
				this._ItemVariantPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemVariantType_ItemVariant", Storage="_ItemVariantType", ThisKey="ItemVariantTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ItemVariantType ItemVariantType
		{
			get
			{
				return this._ItemVariantType.Entity;
			}
			set
			{
				ItemVariantType previousValue = this._ItemVariantType.Entity;
				if (((previousValue != value) 
							|| (this._ItemVariantType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemVariantType.Entity = null;
						previousValue.ItemVariants.Remove(this);
					}
					this._ItemVariantType.Entity = value;
					if ((value != null))
					{
						value.ItemVariants.Add(this);
						this._ItemVariantTypeID = value.ID;
					}
					else
					{
						this._ItemVariantTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("ItemVariantType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Variant_ItemVariant", Storage="_Variant", ThisKey="VariantID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Variant Variant
		{
			get
			{
				return this._Variant.Entity;
			}
			set
			{
				Variant previousValue = this._Variant.Entity;
				if (((previousValue != value) 
							|| (this._Variant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Variant.Entity = null;
						previousValue.ItemVariants.Remove(this);
					}
					this._Variant.Entity = value;
					if ((value != null))
					{
						value.ItemVariants.Add(this);
						this._VariantID = value.ID;
					}
					else
					{
						this._VariantID = default(System.Guid);
					}
					this.SendPropertyChanged("Variant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemVariantPrices(ItemVariantPrice entity)
		{
			this.SendPropertyChanging();
			entity.ItemVariant = this;
		}
		
		private void detach_ItemVariantPrices(ItemVariantPrice entity)
		{
			this.SendPropertyChanging();
			entity.ItemVariant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_ItemVariantPrice")]
	public partial class ItemVariantPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ItemVariantID;
		
		private string _CurrencyCode;
		
		private string _PriceGroupCode;
		
		private decimal _Price;
		
		private EntityRef<ItemVariant> _ItemVariant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnItemVariantIDChanging(System.Guid value);
    partial void OnItemVariantIDChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnPriceGroupCodeChanging(string value);
    partial void OnPriceGroupCodeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public ItemVariantPrice()
		{
			this._ItemVariant = default(EntityRef<ItemVariant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemVariantID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemVariantID
		{
			get
			{
				return this._ItemVariantID;
			}
			set
			{
				if ((this._ItemVariantID != value))
				{
					if (this._ItemVariant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemVariantIDChanging(value);
					this.SendPropertyChanging();
					this._ItemVariantID = value;
					this.SendPropertyChanged("ItemVariantID");
					this.OnItemVariantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceGroupCode", DbType="NVarChar(20) NULL")]
		public string PriceGroupCode
		{
			get
			{
				return this._PriceGroupCode;
			}
			set
			{
				if ((this._PriceGroupCode != value))
				{
					this.OnPriceGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._PriceGroupCode = value;
					this.SendPropertyChanged("PriceGroupCode");
					this.OnPriceGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemVariant_ItemVariantPrice", Storage="_ItemVariant", ThisKey="ItemVariantID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ItemVariant ItemVariant
		{
			get
			{
				return this._ItemVariant.Entity;
			}
			set
			{
				ItemVariant previousValue = this._ItemVariant.Entity;
				if (((previousValue != value) 
							|| (this._ItemVariant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemVariant.Entity = null;
						previousValue.Prices.Remove(this);
					}
					this._ItemVariant.Entity = value;
					if ((value != null))
					{
						value.Prices.Add(this);
						this._ItemVariantID = value.ID;
					}
					else
					{
						this._ItemVariantID = default(System.Guid);
					}
					this.SendPropertyChanged("ItemVariant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_VatGroup")]
	public partial class VatGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Code;
		
		private bool _IsDefault;
		
		private decimal _Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    #endregion
		
		public VatGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,4) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_PriceGroup")]
	public partial class PriceGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _Guid;
		
		private string _Code;
		
		private string _Name;
		
		private bool _PricesIncludeVat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPricesIncludeVatChanging(bool value);
    partial void OnPricesIncludeVatChanged();
    #endregion
		
		public PriceGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricesIncludeVat", DbType="Bit NOT NULL")]
		public bool PricesIncludeVat
		{
			get
			{
				return this._PricesIncludeVat;
			}
			set
			{
				if ((this._PricesIncludeVat != value))
				{
					this.OnPricesIncludeVatChanging(value);
					this.SendPropertyChanging();
					this._PricesIncludeVat = value;
					this.SendPropertyChanged("PricesIncludeVat");
					this.OnPricesIncludeVatChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Code;
		
		private int _NumericalCode;
		
		private bool _IsDefault;
		
		private string _DisplayName;
		
		private decimal _Rate;
		
		private global::nCode.Catalog.Models.CurrencyRoundingRule _RoundingRule;
		
		private decimal _RoundingMultiple;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNumericalCodeChanging(int value);
    partial void OnNumericalCodeChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnRoundingRuleChanging(global::nCode.Catalog.Models.CurrencyRoundingRule value);
    partial void OnRoundingRuleChanged();
    partial void OnRoundingMultipleChanging(decimal value);
    partial void OnRoundingMultipleChanged();
    #endregion
		
		public Currency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumericalCode", DbType="Int NOT NULL")]
		public int NumericalCode
		{
			get
			{
				return this._NumericalCode;
			}
			set
			{
				if ((this._NumericalCode != value))
				{
					this.OnNumericalCodeChanging(value);
					this.SendPropertyChanging();
					this._NumericalCode = value;
					this.SendPropertyChanged("NumericalCode");
					this.OnNumericalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundingRule", DbType="Int NOT NULL", CanBeNull=false)]
		public global::nCode.Catalog.Models.CurrencyRoundingRule RoundingRule
		{
			get
			{
				return this._RoundingRule;
			}
			set
			{
				if ((this._RoundingRule != value))
				{
					this.OnRoundingRuleChanging(value);
					this.SendPropertyChanging();
					this._RoundingRule = value;
					this.SendPropertyChanged("RoundingRule");
					this.OnRoundingRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundingMultiple", DbType="Decimal(18,2) NOT NULL")]
		public decimal RoundingMultiple
		{
			get
			{
				return this._RoundingMultiple;
			}
			set
			{
				if ((this._RoundingMultiple != value))
				{
					this.OnRoundingMultipleChanging(value);
					this.SendPropertyChanging();
					this._RoundingMultiple = value;
					this.SendPropertyChanged("RoundingMultiple");
					this.OnRoundingMultipleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_NoSerie")]
	public partial class NoSerie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Code;
		
		private string _Prefix;
		
		private string _Suffix;
		
		private int _StartNo;
		
		private int _EndNo;
		
		private System.Nullable<int> _LastNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnSuffixChanging(string value);
    partial void OnSuffixChanged();
    partial void OnStartNoChanging(int value);
    partial void OnStartNoChanged();
    partial void OnEndNoChanging(int value);
    partial void OnEndNoChanged();
    partial void OnLastNoChanging(System.Nullable<int> value);
    partial void OnLastNoChanged();
    #endregion
		
		public NoSerie()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="NVarChar(255)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suffix", DbType="NVarChar(255)")]
		public string Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartNo", DbType="Int NOT NULL")]
		public int StartNo
		{
			get
			{
				return this._StartNo;
			}
			set
			{
				if ((this._StartNo != value))
				{
					this.OnStartNoChanging(value);
					this.SendPropertyChanging();
					this._StartNo = value;
					this.SendPropertyChanged("StartNo");
					this.OnStartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndNo", DbType="Int NOT NULL")]
		public int EndNo
		{
			get
			{
				return this._EndNo;
			}
			set
			{
				if ((this._EndNo != value))
				{
					this.OnEndNoChanging(value);
					this.SendPropertyChanging();
					this._EndNo = value;
					this.SendPropertyChanged("EndNo");
					this.OnEndNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNo", DbType="Int")]
		public System.Nullable<int> LastNo
		{
			get
			{
				return this._LastNo;
			}
			set
			{
				if ((this._LastNo != value))
				{
					this.OnLastNoChanging(value);
					this.SendPropertyChanging();
					this._LastNo = value;
					this.SendPropertyChanged("LastNo");
					this.OnLastNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Code;
		
		private string _Name;
		
		private bool _IsDefault;
		
		private bool _IncludeVat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnIncludeVatChanging(bool value);
    partial void OnIncludeVatChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeVat", DbType="Bit NOT NULL")]
		public bool IncludeVat
		{
			get
			{
				return this._IncludeVat;
			}
			set
			{
				if ((this._IncludeVat != value))
				{
					this.OnIncludeVatChanging(value);
					this.SendPropertyChanging();
					this._IncludeVat = value;
					this.SendPropertyChanged("IncludeVat");
					this.OnIncludeVatChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Order")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _OrderNo;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private global::nCode.Catalog.OrderStatus _Status;
		
		private string _CustomerNo;
		
		private string _Name;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _PostalCode;
		
		private string _City;
		
		private string _CountryCode;
		
		private string _Phone;
		
		private string _Email;
		
		private string _CustomerReference;
		
		private string _CustomerEan;
		
		private bool _UseShippingAddress;
		
		private string _ShippingName;
		
		private string _ShippingAddress1;
		
		private string _ShippingAddress2;
		
		private string _ShippingPostalCode;
		
		private string _ShippingCity;
		
		private string _ShippingCountryCode;
		
		private string _SalesChannelCode;
		
		private string _CurrencyCode;
		
		private string _Culture;
		
		private string _PaymentTypeCode;
		
		private global::nCode.Catalog.PaymentStatus _PaymentStatus;
		
		private string _TransactionNo;
		
		private string _DeliveryTypeCode;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private string _DiscountCode;
		
		private decimal _DiscountAmount;
		
		private decimal _FreightAmount;
		
		private string _FreightVatGroupCode;
		
		private decimal _PaymentFeeAmount;
		
		private string _PaymentFeeVatGroupCode;
		
		private decimal _NetTotal;
		
		private decimal _Total;
		
		private bool _VatIncluded;
		
		private string _Comment;
		
		private EntitySet<OrderItem> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnStatusChanging(global::nCode.Catalog.OrderStatus value);
    partial void OnStatusChanged();
    partial void OnCustomerNoChanging(string value);
    partial void OnCustomerNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCustomerReferenceChanging(string value);
    partial void OnCustomerReferenceChanged();
    partial void OnCustomerEanChanging(string value);
    partial void OnCustomerEanChanged();
    partial void OnUseShippingAddressChanging(bool value);
    partial void OnUseShippingAddressChanged();
    partial void OnShippingNameChanging(string value);
    partial void OnShippingNameChanged();
    partial void OnShippingAddress1Changing(string value);
    partial void OnShippingAddress1Changed();
    partial void OnShippingAddress2Changing(string value);
    partial void OnShippingAddress2Changed();
    partial void OnShippingPostalCodeChanging(string value);
    partial void OnShippingPostalCodeChanged();
    partial void OnShippingCityChanging(string value);
    partial void OnShippingCityChanged();
    partial void OnShippingCountryCodeChanging(string value);
    partial void OnShippingCountryCodeChanged();
    partial void OnSalesChannelCodeChanging(string value);
    partial void OnSalesChannelCodeChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnPaymentTypeCodeChanging(string value);
    partial void OnPaymentTypeCodeChanged();
    partial void OnPaymentStatusChanging(global::nCode.Catalog.PaymentStatus value);
    partial void OnPaymentStatusChanged();
    partial void OnTransactionNoChanging(string value);
    partial void OnTransactionNoChanged();
    partial void OnDeliveryTypeCodeChanging(string value);
    partial void OnDeliveryTypeCodeChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnDiscountCodeChanging(string value);
    partial void OnDiscountCodeChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnFreightAmountChanging(decimal value);
    partial void OnFreightAmountChanged();
    partial void OnFreightVatGroupCodeChanging(string value);
    partial void OnFreightVatGroupCodeChanged();
    partial void OnPaymentFeeAmountChanging(decimal value);
    partial void OnPaymentFeeAmountChanged();
    partial void OnPaymentFeeVatGroupCodeChanging(string value);
    partial void OnPaymentFeeVatGroupCodeChanged();
    partial void OnNetTotalChanging(decimal value);
    partial void OnNetTotalChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnVatIncludedChanging(bool value);
    partial void OnVatIncludedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Order()
		{
			this._Items = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_Items), new Action<OrderItem>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(20)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL", CanBeNull=false)]
		public global::nCode.Catalog.OrderStatus Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNo", DbType="NVarChar(255) NULL")]
		public string CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerReference", DbType="NVarChar(255) NULL")]
		public string CustomerReference
		{
			get
			{
				return this._CustomerReference;
			}
			set
			{
				if ((this._CustomerReference != value))
				{
					this.OnCustomerReferenceChanging(value);
					this.SendPropertyChanging();
					this._CustomerReference = value;
					this.SendPropertyChanged("CustomerReference");
					this.OnCustomerReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEan", DbType="NVarChar(13) NULL")]
		public string CustomerEan
		{
			get
			{
				return this._CustomerEan;
			}
			set
			{
				if ((this._CustomerEan != value))
				{
					this.OnCustomerEanChanging(value);
					this.SendPropertyChanging();
					this._CustomerEan = value;
					this.SendPropertyChanged("CustomerEan");
					this.OnCustomerEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseShippingAddress", DbType="Bit NOT NULL")]
		public bool UseShippingAddress
		{
			get
			{
				return this._UseShippingAddress;
			}
			set
			{
				if ((this._UseShippingAddress != value))
				{
					this.OnUseShippingAddressChanging(value);
					this.SendPropertyChanging();
					this._UseShippingAddress = value;
					this.SendPropertyChanged("UseShippingAddress");
					this.OnUseShippingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingName", DbType="NVarChar(255)")]
		public string ShippingName
		{
			get
			{
				return this._ShippingName;
			}
			set
			{
				if ((this._ShippingName != value))
				{
					this.OnShippingNameChanging(value);
					this.SendPropertyChanging();
					this._ShippingName = value;
					this.SendPropertyChanged("ShippingName");
					this.OnShippingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress1", DbType="NVarChar(255)")]
		public string ShippingAddress1
		{
			get
			{
				return this._ShippingAddress1;
			}
			set
			{
				if ((this._ShippingAddress1 != value))
				{
					this.OnShippingAddress1Changing(value);
					this.SendPropertyChanging();
					this._ShippingAddress1 = value;
					this.SendPropertyChanged("ShippingAddress1");
					this.OnShippingAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress2", DbType="NVarChar(255)")]
		public string ShippingAddress2
		{
			get
			{
				return this._ShippingAddress2;
			}
			set
			{
				if ((this._ShippingAddress2 != value))
				{
					this.OnShippingAddress2Changing(value);
					this.SendPropertyChanging();
					this._ShippingAddress2 = value;
					this.SendPropertyChanged("ShippingAddress2");
					this.OnShippingAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingPostalCode", DbType="NVarChar(255)")]
		public string ShippingPostalCode
		{
			get
			{
				return this._ShippingPostalCode;
			}
			set
			{
				if ((this._ShippingPostalCode != value))
				{
					this.OnShippingPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingPostalCode = value;
					this.SendPropertyChanged("ShippingPostalCode");
					this.OnShippingPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCity", DbType="NVarChar(255)")]
		public string ShippingCity
		{
			get
			{
				return this._ShippingCity;
			}
			set
			{
				if ((this._ShippingCity != value))
				{
					this.OnShippingCityChanging(value);
					this.SendPropertyChanging();
					this._ShippingCity = value;
					this.SendPropertyChanged("ShippingCity");
					this.OnShippingCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCountryCode", DbType="NVarChar(20)")]
		public string ShippingCountryCode
		{
			get
			{
				return this._ShippingCountryCode;
			}
			set
			{
				if ((this._ShippingCountryCode != value))
				{
					this.OnShippingCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingCountryCode = value;
					this.SendPropertyChanged("ShippingCountryCode");
					this.OnShippingCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesChannelCode", DbType="NVarChar(20) NULL")]
		public string SalesChannelCode
		{
			get
			{
				return this._SalesChannelCode;
			}
			set
			{
				if ((this._SalesChannelCode != value))
				{
					this.OnSalesChannelCodeChanging(value);
					this.SendPropertyChanging();
					this._SalesChannelCode = value;
					this.SendPropertyChanged("SalesChannelCode");
					this.OnSalesChannelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeCode", DbType="NVarChar(20)")]
		public string PaymentTypeCode
		{
			get
			{
				return this._PaymentTypeCode;
			}
			set
			{
				if ((this._PaymentTypeCode != value))
				{
					this.OnPaymentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeCode = value;
					this.SendPropertyChanged("PaymentTypeCode");
					this.OnPaymentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="Int NOT NULL", CanBeNull=false)]
		public global::nCode.Catalog.PaymentStatus PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this.OnPaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentStatus = value;
					this.SendPropertyChanged("PaymentStatus");
					this.OnPaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNo", DbType="NVarChar(20)")]
		public string TransactionNo
		{
			get
			{
				return this._TransactionNo;
			}
			set
			{
				if ((this._TransactionNo != value))
				{
					this.OnTransactionNoChanging(value);
					this.SendPropertyChanging();
					this._TransactionNo = value;
					this.SendPropertyChanged("TransactionNo");
					this.OnTransactionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTypeCode", DbType="NVarChar(20)")]
		public string DeliveryTypeCode
		{
			get
			{
				return this._DeliveryTypeCode;
			}
			set
			{
				if ((this._DeliveryTypeCode != value))
				{
					this.OnDeliveryTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTypeCode = value;
					this.SendPropertyChanged("DeliveryTypeCode");
					this.OnDeliveryTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountCode", DbType="NVarChar(255) NULL")]
		public string DiscountCode
		{
			get
			{
				return this._DiscountCode;
			}
			set
			{
				if ((this._DiscountCode != value))
				{
					this.OnDiscountCodeChanging(value);
					this.SendPropertyChanging();
					this._DiscountCode = value;
					this.SendPropertyChanged("DiscountCode");
					this.OnDiscountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreightAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal FreightAmount
		{
			get
			{
				return this._FreightAmount;
			}
			set
			{
				if ((this._FreightAmount != value))
				{
					this.OnFreightAmountChanging(value);
					this.SendPropertyChanging();
					this._FreightAmount = value;
					this.SendPropertyChanged("FreightAmount");
					this.OnFreightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreightVatGroupCode", DbType="NVarChar(20)")]
		public string FreightVatGroupCode
		{
			get
			{
				return this._FreightVatGroupCode;
			}
			set
			{
				if ((this._FreightVatGroupCode != value))
				{
					this.OnFreightVatGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._FreightVatGroupCode = value;
					this.SendPropertyChanged("FreightVatGroupCode");
					this.OnFreightVatGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFeeAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaymentFeeAmount
		{
			get
			{
				return this._PaymentFeeAmount;
			}
			set
			{
				if ((this._PaymentFeeAmount != value))
				{
					this.OnPaymentFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentFeeAmount = value;
					this.SendPropertyChanged("PaymentFeeAmount");
					this.OnPaymentFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFeeVatGroupCode", DbType="NVarChar(20) NULL")]
		public string PaymentFeeVatGroupCode
		{
			get
			{
				return this._PaymentFeeVatGroupCode;
			}
			set
			{
				if ((this._PaymentFeeVatGroupCode != value))
				{
					this.OnPaymentFeeVatGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._PaymentFeeVatGroupCode = value;
					this.SendPropertyChanged("PaymentFeeVatGroupCode");
					this.OnPaymentFeeVatGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetTotal", DbType="Decimal(18,2) NOT NULL")]
		public decimal NetTotal
		{
			get
			{
				return this._NetTotal;
			}
			set
			{
				if ((this._NetTotal != value))
				{
					this.OnNetTotalChanging(value);
					this.SendPropertyChanging();
					this._NetTotal = value;
					this.SendPropertyChanged("NetTotal");
					this.OnNetTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatIncluded", DbType="Bit")]
		public bool VatIncluded
		{
			get
			{
				return this._VatIncluded;
			}
			set
			{
				if ((this._VatIncluded != value))
				{
					this.OnVatIncludedChanging(value);
					this.SendPropertyChanging();
					this._VatIncluded = value;
					this.SendPropertyChanged("VatIncluded");
					this.OnVatIncludedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(Max)", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_Items", ThisKey="OrderNo", OtherKey="OrderNo")]
		public EntitySet<OrderItem> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Items(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_OrderItem")]
	public partial class OrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _OrderNo;
		
		private int _DisplayIndex;
		
		private string _ImageFile;
		
		private string _ItemNo;
		
		private System.Nullable<System.Guid> _ItemVariantID;
		
		private string _Title;
		
		private int _Qty;
		
		private decimal _UnitCostPrice;
		
		private decimal _UnitPrice;
		
		private string _VatGroupCode;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnItemVariantIDChanging(System.Nullable<System.Guid> value);
    partial void OnItemVariantIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    partial void OnUnitCostPriceChanging(decimal value);
    partial void OnUnitCostPriceChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnVatGroupCodeChanging(string value);
    partial void OnVatGroupCodeChanged();
    #endregion
		
		public OrderItem()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="NVarChar(255) NULL")]
		public string ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(255) NULL")]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemVariantID", DbType="UniqueIdentifier NULL")]
		public System.Nullable<System.Guid> ItemVariantID
		{
			get
			{
				return this._ItemVariantID;
			}
			set
			{
				if ((this._ItemVariantID != value))
				{
					this.OnItemVariantIDChanging(value);
					this.SendPropertyChanging();
					this._ItemVariantID = value;
					this.SendPropertyChanged("ItemVariantID");
					this.OnItemVariantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int NOT NULL")]
		public int Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCostPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal UnitCostPrice
		{
			get
			{
				return this._UnitCostPrice;
			}
			set
			{
				if ((this._UnitCostPrice != value))
				{
					this.OnUnitCostPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitCostPrice = value;
					this.SendPropertyChanged("UnitCostPrice");
					this.OnUnitCostPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatGroupCode", DbType="NVarChar(20)")]
		public string VatGroupCode
		{
			get
			{
				return this._VatGroupCode;
			}
			set
			{
				if ((this._VatGroupCode != value))
				{
					this.OnVatGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._VatGroupCode = value;
					this.SendPropertyChanged("VatGroupCode");
					this.OnVatGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_Order", ThisKey="OrderNo", OtherKey="OrderNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._OrderNo = value.OrderNo;
					}
					else
					{
						this._OrderNo = default(string);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_OrderPackage")]
	public partial class OrderPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _OrderNo;
		
		private string _TrackingNo;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnTrackingNoChanging(string value);
    partial void OnTrackingNoChanged();
    #endregion
		
		public OrderPackage()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TrackingNo
		{
			get
			{
				return this._TrackingNo;
			}
			set
			{
				if ((this._TrackingNo != value))
				{
					this.OnTrackingNoChanging(value);
					this.SendPropertyChanging();
					this._TrackingNo = value;
					this.SendPropertyChanged("TrackingNo");
					this.OnTrackingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderPackage", Storage="_Order", ThisKey="OrderNo", OtherKey="OrderNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				if ((this._Order.Entity != value))
				{
					this.SendPropertyChanging();
					this._Order.Entity = value;
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_PaymentType")]
	public partial class PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Code;
		
		private string _ProviderName;
		
		private string _Name;
		
		private bool _IsActive;
		
		private int _DisplayIndex;
		
		private string _DisplayName;
		
		private string _Description;
		
		private EntitySet<PaymentTypeLocalization> _Localizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnProviderNameChanging(string value);
    partial void OnProviderNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PaymentType()
		{
			this._Localizations = new EntitySet<PaymentTypeLocalization>(new Action<PaymentTypeLocalization>(this.attach_Localizations), new Action<PaymentTypeLocalization>(this.detach_Localizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProviderName
		{
			get
			{
				return this._ProviderName;
			}
			set
			{
				if ((this._ProviderName != value))
				{
					this.OnProviderNameChanging(value);
					this.SendPropertyChanging();
					this._ProviderName = value;
					this.SendPropertyChanged("ProviderName");
					this.OnProviderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_PaymentTypeLocalization", Storage="_Localizations", ThisKey="ID", OtherKey="PaymentTypeID")]
		public EntitySet<PaymentTypeLocalization> Localizations
		{
			get
			{
				return this._Localizations;
			}
			set
			{
				this._Localizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Localizations(PaymentTypeLocalization entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = this;
		}
		
		private void detach_Localizations(PaymentTypeLocalization entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_PaymentTypeLocalization")]
	public partial class PaymentTypeLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PaymentTypeID;
		
		private string _Culture;
		
		private string _Title;
		
		private string _Description;
		
		private string _Instructions;
		
		private EntityRef<PaymentType> _PaymentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPaymentTypeIDChanging(System.Guid value);
    partial void OnPaymentTypeIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnInstructionsChanging(string value);
    partial void OnInstructionsChanged();
    #endregion
		
		public PaymentTypeLocalization()
		{
			this._PaymentType = default(EntityRef<PaymentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentTypeID
		{
			get
			{
				return this._PaymentTypeID;
			}
			set
			{
				if ((this._PaymentTypeID != value))
				{
					if (this._PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeID = value;
					this.SendPropertyChanged("PaymentTypeID");
					this.OnPaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructions", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Instructions
		{
			get
			{
				return this._Instructions;
			}
			set
			{
				if ((this._Instructions != value))
				{
					this.OnInstructionsChanging(value);
					this.SendPropertyChanging();
					this._Instructions = value;
					this.SendPropertyChanged("Instructions");
					this.OnInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_PaymentTypeLocalization", Storage="_PaymentType", ThisKey="PaymentTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PaymentType PaymentType
		{
			get
			{
				return this._PaymentType.Entity;
			}
			set
			{
				PaymentType previousValue = this._PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentType.Entity = null;
						previousValue.Localizations.Remove(this);
					}
					this._PaymentType.Entity = value;
					if ((value != null))
					{
						value.Localizations.Add(this);
						this._PaymentTypeID = value.ID;
					}
					else
					{
						this._PaymentTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("PaymentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_PaymentTypeProperty")]
	public partial class PaymentTypeProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PaymentTypeID;
		
		private string _Key;
		
		private string _Value;
		
		private EntityRef<PaymentType> _PaymentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPaymentTypeIDChanging(System.Guid value);
    partial void OnPaymentTypeIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public PaymentTypeProperty()
		{
			this._PaymentType = default(EntityRef<PaymentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentTypeID
		{
			get
			{
				return this._PaymentTypeID;
			}
			set
			{
				if ((this._PaymentTypeID != value))
				{
					if (this._PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeID = value;
					this.SendPropertyChanged("PaymentTypeID");
					this.OnPaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_PaymentTypeProperty", Storage="_PaymentType", ThisKey="PaymentTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PaymentType PaymentType
		{
			get
			{
				return this._PaymentType.Entity;
			}
			set
			{
				if ((this._PaymentType.Entity != value))
				{
					this.SendPropertyChanging();
					this._PaymentType.Entity = value;
					this.SendPropertyChanged("PaymentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_DeliveryType")]
	public partial class DeliveryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Code;
		
		private string _ProviderName;
		
		private bool _IsActive;
		
		private int _DisplayIndex;
		
		private EntitySet<DeliveryTypeLocalization> _Localizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnProviderNameChanging(string value);
    partial void OnProviderNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDisplayIndexChanging(int value);
    partial void OnDisplayIndexChanged();
    #endregion
		
		public DeliveryType()
		{
			this._Localizations = new EntitySet<DeliveryTypeLocalization>(new Action<DeliveryTypeLocalization>(this.attach_Localizations), new Action<DeliveryTypeLocalization>(this.detach_Localizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProviderName
		{
			get
			{
				return this._ProviderName;
			}
			set
			{
				if ((this._ProviderName != value))
				{
					this.OnProviderNameChanging(value);
					this.SendPropertyChanging();
					this._ProviderName = value;
					this.SendPropertyChanged("ProviderName");
					this.OnProviderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIndex", DbType="Int NOT NULL")]
		public int DisplayIndex
		{
			get
			{
				return this._DisplayIndex;
			}
			set
			{
				if ((this._DisplayIndex != value))
				{
					this.OnDisplayIndexChanging(value);
					this.SendPropertyChanging();
					this._DisplayIndex = value;
					this.SendPropertyChanged("DisplayIndex");
					this.OnDisplayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryType_DeliveryTypeLocalization", Storage="_Localizations", ThisKey="ID", OtherKey="DeliveryTypeID")]
		public EntitySet<DeliveryTypeLocalization> Localizations
		{
			get
			{
				return this._Localizations;
			}
			set
			{
				this._Localizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Localizations(DeliveryTypeLocalization entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryType = this;
		}
		
		private void detach_Localizations(DeliveryTypeLocalization entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_DeliveryTypeLocalization")]
	public partial class DeliveryTypeLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DeliveryTypeID;
		
		private string _Culture;
		
		private string _Title;
		
		private string _Description;
		
		private EntityRef<DeliveryType> _DeliveryType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDeliveryTypeIDChanging(System.Guid value);
    partial void OnDeliveryTypeIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DeliveryTypeLocalization()
		{
			this._DeliveryType = default(EntityRef<DeliveryType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DeliveryTypeID
		{
			get
			{
				return this._DeliveryTypeID;
			}
			set
			{
				if ((this._DeliveryTypeID != value))
				{
					if (this._DeliveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTypeID = value;
					this.SendPropertyChanged("DeliveryTypeID");
					this.OnDeliveryTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(255)")]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryType_DeliveryTypeLocalization", Storage="_DeliveryType", ThisKey="DeliveryTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DeliveryType DeliveryType
		{
			get
			{
				return this._DeliveryType.Entity;
			}
			set
			{
				DeliveryType previousValue = this._DeliveryType.Entity;
				if (((previousValue != value) 
							|| (this._DeliveryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeliveryType.Entity = null;
						previousValue.Localizations.Remove(this);
					}
					this._DeliveryType.Entity = value;
					if ((value != null))
					{
						value.Localizations.Add(this);
						this._DeliveryTypeID = value.ID;
					}
					else
					{
						this._DeliveryTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("DeliveryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_DeliveryTypeProperty")]
	public partial class DeliveryTypeProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DeliveryTypeID;
		
		private string _Key;
		
		private string _Value;
		
		private EntityRef<DeliveryType> _DeliveryType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDeliveryTypeIDChanging(System.Guid value);
    partial void OnDeliveryTypeIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public DeliveryTypeProperty()
		{
			this._DeliveryType = default(EntityRef<DeliveryType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DeliveryTypeID
		{
			get
			{
				return this._DeliveryTypeID;
			}
			set
			{
				if ((this._DeliveryTypeID != value))
				{
					if (this._DeliveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTypeID = value;
					this.SendPropertyChanged("DeliveryTypeID");
					this.OnDeliveryTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryType_DeliveryTypeProperty", Storage="_DeliveryType", ThisKey="DeliveryTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DeliveryType DeliveryType
		{
			get
			{
				return this._DeliveryType.Entity;
			}
			set
			{
				if ((this._DeliveryType.Entity != value))
				{
					this.SendPropertyChanging();
					this._DeliveryType.Entity = value;
					this.SendPropertyChanged("DeliveryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_DiscountCode")]
	public partial class DiscountCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Code;
		
		private string _Name;
		
		private DiscountType _DiscountType;
		
		private System.Nullable<decimal> _FixedAmount;
		
		private System.Nullable<decimal> _Procentage;
		
		private System.Nullable<System.DateTime> _ValidFrom;
		
		private System.Nullable<System.DateTime> _ValidTo;
		
		private int _Issued;
		
		private int _Applied;
		
		private string _CurrencyCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDiscountTypeChanging(DiscountType value);
    partial void OnDiscountTypeChanged();
    partial void OnFixedAmountChanging(System.Nullable<decimal> value);
    partial void OnFixedAmountChanged();
    partial void OnProcentageChanging(System.Nullable<decimal> value);
    partial void OnProcentageChanged();
    partial void OnValidFromChanging(System.Nullable<System.DateTime> value);
    partial void OnValidFromChanged();
    partial void OnValidToChanging(System.Nullable<System.DateTime> value);
    partial void OnValidToChanged();
    partial void OnIssuedChanging(int value);
    partial void OnIssuedChanged();
    partial void OnAppliedChanging(int value);
    partial void OnAppliedChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    #endregion
		
		public DiscountCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountType", DbType="Int NOT NULL", CanBeNull=false)]
		public DiscountType DiscountType
		{
			get
			{
				return this._DiscountType;
			}
			set
			{
				if ((this._DiscountType != value))
				{
					this.OnDiscountTypeChanging(value);
					this.SendPropertyChanging();
					this._DiscountType = value;
					this.SendPropertyChanged("DiscountType");
					this.OnDiscountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedAmount", DbType="Decimal(18,2) NOT NULL")]
		public System.Nullable<decimal> FixedAmount
		{
			get
			{
				return this._FixedAmount;
			}
			set
			{
				if ((this._FixedAmount != value))
				{
					this.OnFixedAmountChanging(value);
					this.SendPropertyChanging();
					this._FixedAmount = value;
					this.SendPropertyChanged("FixedAmount");
					this.OnFixedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procentage", DbType="Decimal(18,4) NOT NULL")]
		public System.Nullable<decimal> Procentage
		{
			get
			{
				return this._Procentage;
			}
			set
			{
				if ((this._Procentage != value))
				{
					this.OnProcentageChanging(value);
					this.SendPropertyChanging();
					this._Procentage = value;
					this.SendPropertyChanged("Procentage");
					this.OnProcentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> ValidFrom
		{
			get
			{
				return this._ValidFrom;
			}
			set
			{
				if ((this._ValidFrom != value))
				{
					this.OnValidFromChanging(value);
					this.SendPropertyChanging();
					this._ValidFrom = value;
					this.SendPropertyChanged("ValidFrom");
					this.OnValidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> ValidTo
		{
			get
			{
				return this._ValidTo;
			}
			set
			{
				if ((this._ValidTo != value))
				{
					this.OnValidToChanging(value);
					this.SendPropertyChanging();
					this._ValidTo = value;
					this.SendPropertyChanged("ValidTo");
					this.OnValidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issued", DbType="Int NOT NULL")]
		public int Issued
		{
			get
			{
				return this._Issued;
			}
			set
			{
				if ((this._Issued != value))
				{
					this.OnIssuedChanging(value);
					this.SendPropertyChanging();
					this._Issued = value;
					this.SendPropertyChanged("Issued");
					this.OnIssuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Applied", DbType="Int NOT NULL")]
		public int Applied
		{
			get
			{
				return this._Applied;
			}
			set
			{
				if ((this._Applied != value))
				{
					this.OnAppliedChanging(value);
					this.SendPropertyChanging();
					this._Applied = value;
					this.SendPropertyChanged("Applied");
					this.OnAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NVarChar(20) NOT NULL")]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Code;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Unit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_ItemListPrice")]
	public partial class ItemListPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _ItemNo;
		
		private string _CurrencyCode;
		
		private string _PriceGroupCode;
		
		private decimal _Price;
		
		private bool _MultiplePrices;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnPriceGroupCodeChanging(string value);
    partial void OnPriceGroupCodeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnMultiplePricesChanging(bool value);
    partial void OnMultiplePricesChanged();
    #endregion
		
		public ItemListPrice()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceGroupCode", DbType="NVarChar(20)")]
		public string PriceGroupCode
		{
			get
			{
				return this._PriceGroupCode;
			}
			set
			{
				if ((this._PriceGroupCode != value))
				{
					this.OnPriceGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._PriceGroupCode = value;
					this.SendPropertyChanged("PriceGroupCode");
					this.OnPriceGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiplePrices", DbType="Bit NOT NULL")]
		public bool MultiplePrices
		{
			get
			{
				return this._MultiplePrices;
			}
			set
			{
				if ((this._MultiplePrices != value))
				{
					this.OnMultiplePricesChanging(value);
					this.SendPropertyChanging();
					this._MultiplePrices = value;
					this.SendPropertyChanged("MultiplePrices");
					this.OnMultiplePricesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemListPrice", Storage="_Item", ThisKey="ItemNo", OtherKey="ItemNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ListPrices.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ListPrices.Add(this);
						this._ItemNo = value.ItemNo;
					}
					else
					{
						this._ItemNo = default(string);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog_OrderLocation")]
	public partial class OrderLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _OrderNo;
		
		private string _LocationCode;
		
		private string _MunicipalityCode;
		
		private string _RegionCode;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnMunicipalityCodeChanging(string value);
    partial void OnMunicipalityCodeChanged();
    partial void OnRegionCodeChanging(string value);
    partial void OnRegionCodeChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    #endregion
		
		public OrderLocation()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(20)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MunicipalityCode", DbType="NVarChar(20)")]
		public string MunicipalityCode
		{
			get
			{
				return this._MunicipalityCode;
			}
			set
			{
				if ((this._MunicipalityCode != value))
				{
					this.OnMunicipalityCodeChanging(value);
					this.SendPropertyChanging();
					this._MunicipalityCode = value;
					this.SendPropertyChanged("MunicipalityCode");
					this.OnMunicipalityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="NVarChar(20)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderLocation", Storage="_Order", ThisKey="OrderNo", OtherKey="OrderNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				if ((this._Order.Entity != value))
				{
					this.SendPropertyChanging();
					this._Order.Entity = value;
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
